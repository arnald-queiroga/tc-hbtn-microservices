Bem, podemos definir Microsserviços basicamente como uma forma ou abordagem de organizar uma aplicação, onde cada parte dela é um serviço independente, isto é, de baixo acoplamento. No qual, as aplicações são divididas em pequenos serviços que independem um do outro, e que se comunicam através de APIs muito bem definidas. E seus serviços pertencem a pequenas equipes autossuficientes. Diferentemente de aplicações monolíticas, aonde os serviços e códigos são concetrados em uma única aplicação, contendo vários bancos de dados, e possuindo um alto grau de acoplação. formando um grande pedaço de software. As devantagens de uma aplicação monolítica, por exemplo, é que conforme a aplicação vai crescendo, há uma possibilidade grande de se ter demoras em deploy, falhas que podem derrubar o sistema inteiro, e, não há a possibilidade de se usar mais de um tipo de tecnologia ou linguagem.
Agora falando sobre os benefícios de se utilizar Microsserviços, podemos destacar as principais: o pelo fato de, tanto os projetos quanto as tecnologias são independentes, a falha em um serviço é isolada, ou seja, falha em um módulo específico não afeta nos outros módulos, e por último, os deploys são menores e mais rápidos.
Já com relação aos tipos de comunicação entre os microsserviços, podemos destacar três. A primeira que já sabe o padrão da web, que é através do protocolo HTTP po rmeio de requisições de um cliente para um servidor. Há também a comunicação por serviços de menssageria, que consiste na comunicação baseada em mensagens, e nesta aboragem, não temos os serviços se comunicando de forma direta. E por último, existe a comunicação orientada a eventos, que é considerada assíncrona, com a característica de remover completamente o acoplamento entre os serviços. Nesse tipo de comunicação, os serviços se comunicam através de eventos que são produzidos por serviços individuais.
